{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.jsx","components/ui/Navbar.jsx","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","router/PublicRoute.jsx","router/PrivateRoute.jsx","router/AppRouter.jsx","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.jsx","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","dateNow","minutes","seconds","add","dateFinish","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setdateStart","dateEnd","setdateEnd","formValues","setformValues","titleValid","setTitleValid","useEffect","closeModal","isOpen","onRequestClose","style","contentLabel","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","stateInitial","calendarReducer","action","filter","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63707aa8.chunk.js","sourcesContent":["import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","\r\nexport const types =  {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n//    evetStartAddNew: '[event] Start add new',\r\n    eventSetActive: '[event] Set Active',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    eventLogout: '[event] Events logout',\r\n\r\n    \r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}\r\n\r\n\r\n","import moment from 'moment'\n\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate(),\n        })\n    );\n\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\n\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if ( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( event );\n                dispatch( eventAddNew( event ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n}\n\n\nexport const eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartUpdate = ( event ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nexport const eventDeleted = () => ({ type: types.eventDeleted });\n\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n            dispatch( eventLoaded( events ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout =() => ({ type: types.eventLogout });","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport { eventLogout }  from './events'\nimport Swal from 'sweetalert2';\n\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                \n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n        \n\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( logout() );\n        dispatch( eventLogout() )\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm.js'\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\nimport './login.css'\r\n\r\nconst LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'fernando@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Nando',\r\n        rEmail: 'nando@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n    \r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error');\r\n        }\r\n        console.log('?')\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 login-form-1\">\r\n                <h3>Ingreso</h3>\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Correo\"\r\n                            name=\"lEmail\"\r\n                            value={lEmail}\r\n                            onChange={handleLoginInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Contraseña\"\r\n                            name= \"lPasword\"\r\n                            value={lPassword}\r\n                            onChange={handleLoginInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"submit\"\r\n                            className=\"btnSubmit\"\r\n                            value=\"Login\" \r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"col-md-6 login-form-2\">\r\n                <h3>Registro</h3>\r\n                <form onSubmit={handleRegister}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Nombre\"\r\n                            name='rName'\r\n                            value={rName}\r\n                            onChange={handleRegisterInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Correo\"\r\n                            name=\"rEmail\"\r\n                            value={rEmail}\r\n                            onChange={handleRegisterInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Contraseña\"\r\n                            name=\"rPassword1\" \r\n                            value={rPassword1}\r\n                            onChange={handleRegisterInputChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Repita la contraseña\"\r\n                            name=\"rPassword2\"\r\n                            value={rPassword2}\r\n                            onChange={handleRegisterInputChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"submit\" \r\n                            className=\"btnSubmit\" \r\n                            value=\"Crear cuenta\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\n\r\nconst Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n        <span className=\"navbar-brand\">\r\n            {name}\r\n        </span>\r\n        \r\n        <button \r\n        className=\"btn btn-outline-danger\"\r\n        onClick={handleLogout}>\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n            <span> Salir</span>\r\n        </button>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CalendarEvent = ({event}) => {\r\n    // console.log(event)\r\n    const {title, user:{name}} = event\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong> -\r\n            <span>{name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nCalendarEvent.propTypes = {\r\nevent : PropTypes.object.isRequired\r\n\r\n}\r\n\r\nexport default CalendarEvent\r\n\r\n\r\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\n  // Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement('#root')\r\nconst dateNow = moment().minutes(0).seconds(0).add(1,'hours') // momento actual redondeado a 0 min y 0 sec\r\nconst dateFinish = dateNow.clone().add(1,'hours') // clonar + 1 hora\r\n\r\n\r\nconst initEvent ={\r\n    title: '',\r\n    notes: '',\r\n    start: dateNow.toDate(),\r\n    end: dateFinish.toDate()\r\n}\r\n\r\n\r\n\r\n\r\nconst CalendarModal = () => {\r\n\r\nconst { modalOpen } = useSelector( state => state.ui ); \r\nconst {activeEvent} = useSelector(state => state.calendar)\r\nconst dispatch = useDispatch()\r\n\r\nconst [dateStart, setdateStart] = useState(dateNow.toDate())\r\nconst [dateEnd, setdateEnd] = useState(dateFinish.toDate())\r\n\r\n\r\nconst [formValues, setformValues] = useState(initEvent)\r\nconst [ titleValid, setTitleValid ] = useState(true);\r\n\r\nconst {title, notes, start, end} = formValues\r\n\r\nuseEffect(() => {\r\n    if ( activeEvent ) {\r\n        setformValues( activeEvent );\r\n    } else {\r\n        setformValues( initEvent );\r\n    }\r\n}, [activeEvent, setformValues])\r\n\r\nconst handleInputChange = ({target}) =>{\r\n    setformValues({\r\n        ...formValues,\r\n        [target.name] : target.value\r\n    }) \r\n}\r\n\r\nconst closeModal = () =>{\r\n    console.log('closing modal...')\r\n    dispatch( uiCloseModal() );\r\n    dispatch( eventClearActiveEvent() );\r\n    setformValues(initEvent)\r\n}\r\n\r\n/*\r\nconst openModal = () =>{\r\n    console.log('opening modal ...')\r\n}\r\n*/\r\n\r\n\r\n\r\nconst handleStartDateChange = (e) => {\r\n   // console.log(e)\r\n    setdateStart(e)\r\n    setformValues({\r\n        ...formValues,\r\n        start: e\r\n    })\r\n}\r\n\r\nconst handleEndDateChange = (e) => {\r\n   // console.log(e)\r\n    setdateEnd(e)\r\n    setformValues({\r\n        ...formValues,\r\n        end: e\r\n    })\r\n}\r\n\r\nconst handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    //objeto que se graba en la data base\r\n    console.log(formValues)\r\n    // validaciones\r\n    const momentStart = moment( start );\r\n    const momentEnd = moment( end );\r\n\r\n    if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n        return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n    }\r\n\r\n    if ( title.trim().length < 2 ) {\r\n        return setTitleValid(false);\r\n    }\r\n\r\n    if ( activeEvent ) {\r\n        dispatch( eventStartUpdate( formValues ) )\r\n    } else {\r\n        dispatch( eventStartAddNew(formValues) );\r\n        /*\r\n        dispatch( eventAddNew({\r\n            ...formValues,\r\n            id: new Date().getTime(),\r\n            user: {\r\n                _id: '123',\r\n                name: 'Fernando'\r\n            }\r\n        }) );\r\n        */\r\n    }\r\n\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n    \r\n}\r\n\r\n\r\n\r\n   \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        isOpen={modalOpen}\r\n       // onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n        closeTimeoutMS = {200}\r\n        className='modal'\r\n        overlayClassName='modal-fondo'\r\n      > \r\n                <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\r\n                <hr />\r\n                <form\r\n                onSubmit={handleSubmitForm}\r\n                 className=\"container\">\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker\r\n                            onChange={handleStartDateChange}\r\n                            value={dateStart}\r\n                            className='form-control'\r\n                            />\r\n                    </div>\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateFinish.toDate()}\r\n                        className='form-control'\r\n                        />\r\n                    </div>\r\n                \r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className={ `form-control ${ !titleValid && 'is-invalid' } `}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            value={title}\r\n                            autoComplete=\"off\"\r\n                            onChange= {handleInputChange}\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n                \r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={notes}\r\n                            onChange= {handleInputChange}\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n                \r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n                \r\n                </form>\r\n      </Modal>\r\n    )\r\n}\r\n\r\nexport default CalendarModal\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nconst AddNewFab = () => {\r\n\r\nconst dispatch = useDispatch()\r\n\r\nconst handleClickNew = () => {\r\n    dispatch(uiOpenModal())\r\n}\r\n\r\n    return (\r\n        <button\r\n        className=\"btn btn-primary fab\"\r\n        onClick={ handleClickNew }\r\n    >\r\n        <i className=\"fas fa-plus\"></i>\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default AddNewFab\r\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../ui/Navbar'\r\nimport { Calendar, momentLocalizer }from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\nimport CalendarEvent from './CalendarEvent'\r\nimport CalendarModal from './CalendarModal'\r\nimport { uiOpenModal } from '../../actions/ui'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events'\r\nimport AddNewFab from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\n\r\nmoment.locale('es')\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n\r\n\r\n\r\n\r\nconst CalendarScreen = () => {\r\n \r\nconst { events, activeEvent } = useSelector( state => state.calendar );    \r\nconst { uid } = useSelector( state => state.auth );\r\nconst [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month')\r\nconst dispatch = useDispatch()\r\n\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n        \r\n    dispatch( eventStartLoading() )\r\n \r\n\r\n}, [ dispatch ])\r\n\r\n\r\n\r\n// EVENTOS DEL CALENDAR\r\n\r\nconst onDoubleClickEvent = (e) => {\r\n   // console.log(e)\r\n    dispatch( uiOpenModal() );\r\n   \r\n}\r\n\r\nconst onSelectEvent = (e) => {\r\n   // console.log(e)\r\n    dispatch( eventSetActive(e) )\r\n}\r\n\r\nconst onViewChange = (e) => {\r\n    console.log(e)\r\n    setlastView(e)\r\n    localStorage.setItem('lastView', e)\r\n}\r\n\r\nconst onSelectSlot = (e) => {\r\n    console.log(e)\r\n    dispatch( eventClearActiveEvent() );\r\n}\r\nconst eventStyleGetter = ( event, start, end, isSelected ) => {\r\n// console.log(event, start, end, isSelected)\r\n    const style = {\r\n        backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n        borderRadius: '0px',\r\n        opacity: 0.8,\r\n        display: 'block',\r\n        color: 'white'\r\n    }\r\n\r\n\r\n    return {\r\n        style\r\n    }\r\n};\r\n\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n              <Navbar />\r\n            \r\n\r\n              <Calendar\r\n              localizer={localizer}\r\n              events={events}\r\n              startAccessor=\"start\"\r\n              endAccessor=\"end\"\r\n              messages = {messages}\r\n              eventPropGetter = {eventStyleGetter}\r\n              onDoubleClickEvent = {onDoubleClickEvent}\r\n              onSelectEvent = {onSelectEvent}\r\n              onView = {onViewChange}\r\n              onSelectSlot={ onSelectSlot }\r\n              selectable={ true }\r\n              view={ lastView }\r\n              components={{\r\n                event: CalendarEvent\r\n              }}\r\n               />\r\n\r\n               <AddNewFab />\r\n\r\n               {\r\n                (activeEvent) && <DeleteEventFab />\r\n               }\r\n\r\n               <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarScreen\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect }  from 'react'\r\nimport { BrowserRouter as Router , Switch, Redirect } from 'react-router-dom'\r\nimport LoginScreen from '../components/auth/LoginScreen'\r\nimport CalendarScreen from '../components/calendar/CalendarScreen'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\n\r\n\r\nconst AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                <PublicRoute \r\n                exact \r\n                path=\"/login\" \r\n                component={ LoginScreen }\r\n                isAuthenticated={ !!uid }\r\n                />\r\n\r\n                <PrivateRoute \r\n                    exact \r\n                    path=\"/\" \r\n                    component={ CalendarScreen } \r\n                    isAuthenticated={ !!uid }\r\n                />\r\n                    \r\n                    <Redirect to='/' component={CalendarScreen} />\r\n                </Switch>\r\n            </div>\r\n        </Router>        \r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from \"../types/types\"\r\n// import moment from 'moment'\r\n\r\n/*\r\nconst stateInitial = {\r\n    events: [{\r\n        id: new Date().getTime(),\r\n        title: 'Cumpleaños del jefe',\r\n        start: moment().toDate(),\r\n        end: moment().add( 2, 'hours' ).toDate(),\r\n        bgcolor: '#fafafa',\r\n        notes: 'Comprar el pastel',\r\n        user: {\r\n            _id: '123',\r\n            name: 'Fernando'\r\n        }\r\n    }],\r\n    activeEvent: null\r\n}\r\n*/\r\n\r\nconst stateInitial = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nconst calendarReducer = (state = stateInitial, action) => {\r\n    switch ( action.type ) {\r\n        \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n    \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n             return {\r\n                    ...state,\r\n                    events: [ ...action.payload ]\r\n                }\r\n    \r\n        case types.eventLogout:\r\n            return {\r\n                    ...stateInitial\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default calendarReducer\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport calendarReducer  from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport AppRouter from './router/AppRouter';\nimport { store } from \"./store/store\";\n\nconst CalendarApp = () => {\n  return (\n    <Provider store={ store }>\n            <AppRouter />\n    </Provider>\n  );\n}\n\nexport default CalendarApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css'\n\nconsole.log(process.env)\nReactDOM.render(\n\n    <CalendarApp />,\n \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}